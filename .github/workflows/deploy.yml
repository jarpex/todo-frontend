name: Deploy ToDo frontend on K3s

on:
  push:
    branches:
      - main

permissions:
  contents: read
  security-events: write

jobs:
  Build:
    runs-on: self-hosted
    env:
      KUBECTL: sudo k3s kubectl

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22

      - name: Install dependencies
        run: npm ci

      - name: Build frontend
        run: npm run build

  SAST:
    runs-on: self-hosted
    needs: Build
    env:
      KUBECTL: sudo k3s kubectl

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: SAST – Run Semgrep scan in-cluster
        run: |
          ${{ env.KUBECTL }} delete job semgrep-frontend-scan --ignore-not-found
          ${{ env.KUBECTL }} apply -f /home/admin/k8s/semgrep-frontend-job.yaml

          echo "⏳ Waiting for Semgrep job to complete..."
          while [[ $(${{ env.KUBECTL }} get job semgrep-frontend-scan -o jsonpath='{.status.succeeded}') != "1" ]]; do
            if [[ $(${{ env.KUBECTL }} get job semgrep-frontend-scan -o jsonpath='{.status.failed}') == "1" ]]; then
              echo "❌ Semgrep scan failed in cluster. Deployment halted."
              ${{ env.KUBECTL }} logs job/semgrep-frontend-scan
              exit 1
            fi
            sleep 5
          done

          echo "✅ Semgrep scan passed."

      - name: Upload Semgrep SARIF to GitHub
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: /home/admin/build/todo-frontend/semgrep-results.sarif

  Kaniko-deploy:
    runs-on: self-hosted
    needs: [Build, SAST]
    env:
      KUBECTL: sudo k3s kubectl

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Prepare Kaniko build context
        run: |
          mkdir -p /home/admin/build/todo-frontend
          cp Dockerfile /home/admin/build/todo-frontend/
          cp nginx.conf /home/admin/build/todo-frontend/
          cp -r dist /home/admin/build/todo-frontend/

      - name: Create Kaniko build job
        run: |
          ${{ env.KUBECTL }} apply -f k8s/kaniko-build-job.yaml

      - name: Wait for Kaniko build to finish
        run: |
          while [[ $(${{ env.KUBECTL }} get job kaniko-build -o jsonpath='{.status.succeeded}') != "1" ]]; do
            echo "Waiting for kaniko-build to finish..."
            sleep 5
          done

      - name: Clean up Kaniko build job
        run: |
          ${{ env.KUBECTL }} delete job kaniko-build --ignore-not-found

      - name: Delete old deployment if exists
        run: |
          ${{ env.KUBECTL }} delete deployment todo-frontend --ignore-not-found
          ${{ env.KUBECTL }} delete service todo-frontend --ignore-not-found

      - name: Apply Kubernetes manifests
        run: |
          ${{ env.KUBECTL }} apply -f k8s/deployment.yaml
          ${{ env.KUBECTL }} apply -f k8s/service.yaml
